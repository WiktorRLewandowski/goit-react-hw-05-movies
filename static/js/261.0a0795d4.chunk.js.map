{"version":3,"file":"static/js/261.0a0795d4.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","webpack://react-homework-template/./src/components/Credits/Credits.module.css?7b55","components/Credits/Credits.jsx","components/Reviews/Reviews.jsx","pages/MoviePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__cJixg\",\"poster\":\"MovieDetails_poster__Gw9Qy\",\"details\":\"MovieDetails_details__tmd20\",\"additional\":\"MovieDetails_additional__EaCvI\"};","import { NavLink, useLocation, useParams } from \"react-router-dom\"\nimport { useState } from \"react\"\nimport { fetchById } from \"services\"\nimport css from './MovieDetails.module.css'\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w300'\n\nexport default function MovieDetails() {\n    const { id } = useParams()\n    const location = useLocation()\n    const [movie, setMovie] = useState(() => {\n        return (\n        fetchById(id)\n        .then(movie => setMovie(movie))\n        .catch(error => console.log(error))\n        )\n    }) \n    const {\n        title, \n        release_date, \n        poster_path,\n        vote_average,\n        overview,\n        genres,    \n    } = movie\n    \n    const calculateScore = (score) => {\n        const userScore = Math.round(score*10)\n        return `${userScore}%`\n    }  \n\n    return(\n        <>\n        <div className={css.wrapper}>\n                <img src={`${IMG_URL}${poster_path}`} alt={`${title} official poster`} />\n            <div className={css.details}>\n                <h2>{title} {release_date ? `(${release_date.slice(0,4)})` : ''}</h2>\n                <p>User score: {calculateScore(vote_average)}</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <ul>\n                    {genres ? genres.map(genre => {\n                        return (\n                            <li key={crypto.randomUUID()}>{genre.name + ' '}</li>\n                            )\n                        }):''}\n                </ul>\n            </div>    \n        </div>\n        <div className={css.additional}>\n                <hr/>\n                <p>Additional information</p>\n                <ul>\n                    <li><NavLink to='cast' state={{ from: location.state?.from }}>Cast</NavLink></li>\n                    <li><NavLink to='reviews' state={{ from: location.state?.from }}>Reviews</NavLink></li>\n                </ul>\n        </div>\n    </>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"creditsGrid\":\"Credits_creditsGrid__f6bF5\"};","import css from './Credits.module.css'\n\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w185/'\n\nexport default function Credits({credits}) {\n    const cast = credits.cast\n    return (\n        <ul className={css.creditsGrid}>\n            {cast.map(credits => {\n                return(\n                    <li key={credits.id}>\n                        <img className={css.photo} \n                            src={credits.profile_path !== null \n                                ? `${IMAGE_URL}${credits.profile_path}` \n                                : 'https://placehold.jp/185x278.png'} \n                            alt={`${credits.name}`} />\n                        <p>Name: {credits.name}</p>\n                        <p>Character: {credits.character}</p>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n} ","export default function Reviews ({ reviews }) {\n    const results = reviews.results\n    return (\n        <ul>\n            {results.map(({id, author, content}) => {\n                return (\n                    <li key={id}>\n                        <strong>Author: {author}</strong>\n                        <p>{content}</p>\n                    </li>\n                )\n            })}\n        </ul>\n    )\n}","import { useEffect, useState} from \"react\"\nimport { Link, Routes, useParams } from \"react-router-dom\"\nimport { useLocation } from \"react-router-dom\"\nimport { fetchById } from \"services\"\nimport { refs } from \"services\"\nimport { Route } from \"react-router-dom\"\n\nimport  MovieDetails  from \"components/MovieDetails/MovieDetails\"\nimport  Credits from \"components/Credits/Credits\"\nimport  Reviews from \"components/Reviews/Reviews\"\n\nexport default function MoviePage() {\n    const { id } = useParams()\n    const [movie, setMovie] = useState(() => {\n        return (\n        fetchById(id)\n        .then(movie => setMovie(movie))\n        .catch(error => console.log(error))\n        )\n    }) \n    const [reviews, setReviews] = useState(()=> {\n        return (\n        fetchById(id, refs.reviews)\n        .then(review => setReviews(review))\n        .catch(error => console.log(error))   \n        )\n    })\n    const [credits, setCredits] = useState(() => {\n        return (\n            fetchById(id, refs.credits)\n            .then(credit => setCredits(credit))\n            .catch(error => console.log(error))\n            \n        )\n    })\n    const [isLoading, setIsLoading] = useState(false)    \n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/movies\";\n\n    useEffect(()=> {\n\n        setIsLoading(true)\n        fetchById(id)\n        .then(movie => setMovie(movie))\n        .catch(error => console.log(error))\n          \n        fetchById(id, refs.reviews)\n        .then(review => setReviews(review))\n        .catch(error => console.log(error))\n\n        fetchById(id, refs.credits)\n        .then(credit => setCredits(credit))\n        .catch(error => console.log(error))\n        .then(()=> setIsLoading(false))\n    }, [id]) \n\n    if(isLoading) {\n        return 'Loading...'\n    }\n\n    return (\n        <>\n        <Link className=\"btnBack\" to={backLinkHref}>{`<<`} Back to movies</Link>\n        \n        <MovieDetails movie={movie}/>\n        <Routes>\n            <Route path='reviews' element={!reviews.total_results ? \"No reviews yet\" : <Reviews reviews={reviews} />}/>\n            <Route path='cast' element={!credits.cast ? 'No cast listed' : <Credits credits={credits}/> }/>\n        </Routes>\n        \n        </>\n    )\n}\n"],"names":["MovieDetails","id","useParams","location","useLocation","useState","fetchById","then","movie","setMovie","catch","error","console","log","title","release_date","poster_path","vote_average","overview","genres","className","css","src","alt","slice","score","userScore","Math","round","calculateScore","map","genre","name","crypto","randomUUID","to","state","from","Credits","cast","credits","profile_path","character","Reviews","results","reviews","author","content","MoviePage","refs","review","setReviews","credit","setCredits","isLoading","setIsLoading","backLinkHref","useEffect","path","element","total_results"],"sourceRoot":""}