{"version":3,"file":"static/js/973.7515883f.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","pages/MoviePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__cJixg\",\"poster\":\"MovieDetails_poster__Gw9Qy\",\"details\":\"MovieDetails_details__tmd20\",\"additional\":\"MovieDetails_additional__EaCvI\"};","import { NavLink, useLocation, useParams } from \"react-router-dom\"\nimport { useState } from \"react\"\nimport { fetchById } from \"services\"\nimport css from './MovieDetails.module.css'\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w300'\n\nexport default function MovieDetails() {\n    const { id } = useParams()\n    const location = useLocation()\n    const [movie, setMovie] = useState(() => {\n        return (\n        fetchById(id)\n        .then(movie => setMovie(movie))\n        .catch(error => console.log(error))\n        )\n    }) \n\n    const {\n        title, \n        release_date, \n        poster_path,\n        vote_average,\n        overview,\n        genres,    \n    } = movie\n    \n    const calculateScore = (score) => {\n        const userScore = Math.round(score*10)\n        return `${userScore}%`\n    }\n    \n    const poster = `${IMG_URL}${poster_path}`\n\n    return(\n        <>\n        <div className={css.wrapper}>\n                <img className={css.poster}\n                    src={poster_path !== null \n                            ? poster \n                            : 'https://wiktorrlewandowski.github.io/projekt-grupa-3/poster-none.d4c9acdc.png'} \n                    alt={`${title} official poster`} />\n            <div className={css.details}>\n                <h2>{title} {release_date ? `(${release_date.slice(0,4)})` : ''}</h2>\n                <p>User score: {calculateScore(vote_average)}</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <ul>\n                    {genres ? genres.map(genre => {\n                        return (\n                            <li key={crypto.randomUUID()}>{genre.name + ' '}</li>\n                            )\n                        }):''}\n                </ul>\n            </div>    \n        </div>\n        <div className={css.additional}>\n                <hr/>\n                <p>Additional information</p>\n                <ul>\n                    <li><NavLink to='cast' state={{ from: location.state?.from }}>Cast</NavLink></li>\n                    <li><NavLink to='reviews' state={{ from: location.state?.from }}>Reviews</NavLink></li>\n                </ul>\n        </div>\n    </>\n    )\n}\n","import { useEffect, useState, lazy, Suspense} from \"react\"\nimport { Link, Routes, useParams } from \"react-router-dom\"\nimport { useLocation } from \"react-router-dom\"\nimport { fetchById } from \"services\"\nimport { refs } from \"services\"\nimport { Route } from \"react-router-dom\"\nimport { Loader } from \"components/Loader\"\n\nimport MovieDetails from \"components/MovieDetails/MovieDetails\"\n\nconst Credits = lazy(()=> import('components/Credits/Credits'))\nconst Reviews = lazy(()=> import('components/Reviews/Reviews'))\n\nexport default function MoviePage() {\n    const { id } = useParams()\n    const [movie, setMovie] = useState([]) \n    const [reviews, setReviews] = useState([])\n    const [credits, setCredits] = useState([])\n    const [isLoading, setIsLoading] = useState(false)    \n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/movies\";\n\n    useEffect(()=> {\n\n        setIsLoading(true)\n        fetchById(id)\n        .then(movie => setMovie(movie))\n        .catch(error => console.log(error))\n        .then(()=> setIsLoading(false))\n          \n        fetchById(id, refs.reviews)\n        .then(review => setReviews(review))\n        .catch(error => console.log(error))\n\n        fetchById(id, refs.credits)\n        .then(credit => setCredits(credit))\n        .catch(error => console.log(error))\n    }, [id]) \n\n    if(isLoading) {\n        return <Loader/>\n    }\n\n    return (\n        <>\n        \n        <Link className=\"btnBack\" to={backLinkHref}>{`<<`} Back to movies</Link>\n        \n        <MovieDetails movie={movie}/>\n        \n        <Suspense fallback={<Loader/>}>\n        <Routes>\n            <Route path='reviews' element={!reviews.total_results ? \"No reviews yet\" : <Reviews reviews={reviews} />}/>\n            <Route path='cast' element={!credits.cast ? 'No cast listed' : <Credits credits={credits}/> }/>\n        </Routes>\n        </Suspense>\n        \n        </>\n    )\n}\n"],"names":["MovieDetails","id","useParams","location","useLocation","useState","fetchById","then","movie","setMovie","catch","error","console","log","title","release_date","poster_path","vote_average","overview","genres","poster","className","css","src","alt","slice","score","userScore","Math","round","calculateScore","map","genre","name","crypto","randomUUID","to","state","from","Credits","lazy","Reviews","MoviePage","reviews","setReviews","credits","setCredits","isLoading","setIsLoading","backLinkHref","useEffect","refs","review","credit","Loader","Suspense","fallback","path","element","total_results","cast"],"sourceRoot":""}